[{"categories":null,"content":"But this query still can be better, There‚Äôs a new feature introduced in PostgreSQL 9.2, which allow us to get data from index itself, without touching the actual table data. üìç TODO: consider the visibility map We can build the mapping between key_id and the rank=1 timestamp first, WITH map AS ( SELECT key_id, timestamp FROM ( SELECT key_id, timestamp, rank() OVER (PARTITION BY key_id ORDER BY TIMESTAMP DESC) AS rank FROM dbData where \"timestamp\" \u003c= 10000 and key_id \u003c 100 ) sub WHERE rank = 1) SELECT * FROM map; Result will be like: key_id | timestamp --------+----------- 1 | 10000 2 | 300 3 | 6000 4 | 90303 WITH map AS ( SELECT key_id, timestamp FROM ( SELECT key_id, timestamp, rank() OVER (PARTITION BY key_id ORDER BY TIMESTAMP DESC) AS rank FROM dbData where \"timestamp\" \u003c= 10000 and key_id \u003c 100 ) sub WHERE rank = 1) SELECT dbKey.*, dbData.* FROM dbKey INNER JOIN map m ON m.key_id = dbKey.id INNER JOIN dbData ON dbData.key_id = m.key_id AND m.timestamp = dbData.timestamp; Here‚Äôs the example query plan Reference: PostgreSQL Wiki ","date":"2023-02-12","objectID":"/idx-only-scan/:0:0","tags":null,"title":"Part3: Use Index-Only Scan to make our query even faster","uri":"/idx-only-scan/"},{"categories":null,"content":"This is my first glance of ChatGPT, and I ask her to generate a peice of code in Haskell, which can map a function to a list. The result she generated is totally correct, and can be run in playground. addOneToEach :: [Int] -\u003e [Int] addOneToEach xs = map (+1) xs myMap :: (a -\u003e b) -\u003e [a] -\u003e [b] myMap _ [] = [] myMap f (x:xs) = f x : myMap f xs main = do let myList = [1, 2, 3, 4] let doubledList = myMap (*2) myList print doubledList -- Output: [2,4,6,8] Here‚Äôs the link to our chat: https://sharegpt.com/c/yedzb1N ","date":"2023-01-21","objectID":"/chatgpt-first-glance/:0:0","tags":null,"title":"ChatGPT First Glance","uri":"/chatgpt-first-glance/"},{"categories":null,"content":"Hello, This is my first time trying Hugo! Inline Formula: SELECT 'hello-world' FROM me Block Formula: ","date":"2023-01-08","objectID":"/my-first-post/:0:0","tags":null,"title":"My First Post","uri":"/my-first-post/"},{"categories":null,"content":"I am unknowntpo, a Backend Software Engineer. ","date":"2023-01-08","objectID":"/about/:0:0","tags":null,"title":"About me","uri":"/about/"}]