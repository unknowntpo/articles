<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Known, Unknown, Unknownable</title>
        <link>https://blog.unknowntpo.me/</link>
        <description>My secret universe</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>e850506@gmail.com (unknowntpo)</managingEditor>
            <webMaster>e850506@gmail.com (unknowntpo)</webMaster><lastBuildDate>Tue, 07 Mar 2023 10:03:56 &#43;0800</lastBuildDate>
            <atom:link href="https://blog.unknowntpo.me/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>Build Nested JSON in PostgreSQL</title>
    <link>https://blog.unknowntpo.me/nested-json/</link>
    <pubDate>Tue, 07 Mar 2023 10:03:56 &#43;0800</pubDate>
    <author>unknowntpo</author>
    <guid>https://blog.unknowntpo.me/nested-json/</guid>
    <description><![CDATA[Original Stackoverflow thread:
https://stackoverflow.com/questions/42222968/create-nested-json-from-sql-query-postgres-9-4/42226253#42226253
Suppose we have this tables:
person car wheel And the relation between is:
person:car = 1:N car:wheel = 1:N We need to build some nested JSON Object with SQL Query to get the summary about details of each car this person has, what would you do ?
The Goal 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 { &#34;persons&#34;: [ { &#34;person_name&#34;: &#34;Johny&#34;, &#34;cars&#34;: [ { &#34;carid&#34;: 1, &#34;type&#34;: &#34;Toyota&#34;, &#34;comment&#34;: &#34;nice car&#34;, &#34;wheels&#34;: [ { &#34;which&#34;: &#34;front&#34;, &#34;serial number&#34;: 11 }, { &#34;which&#34;: &#34;back&#34;, &#34;serial number&#34;: 12 } ] }, { &#34;carid&#34;: 2, &#34;type&#34;: &#34;Fiat&#34;, &#34;comment&#34;: &#34;nice car&#34;, &#34;wheels&#34;: [ { &#34;which&#34;: &#34;front&#34;, &#34;serial number&#34;: 21 }, { &#34;which&#34;: &#34;back&#34;, &#34;serial number&#34;: 22 } ] } ] }, { &#34;person_name&#34;: &#34;Freddy&#34;, &#34;cars&#34;: [ { &#34;carid&#34;: 3, &#34;type&#34;: &#34;Opel&#34;, &#34;comment&#34;: &#34;nice car&#34;, &#34;wheels&#34;: [ { &#34;which&#34;: &#34;front&#34;, &#34;serial number&#34;: 3 } ] } ] } ] } Approach 1 - Left Join 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 select json_build_object( &#39;persons&#39;, json_agg( json_build_object( &#39;person_name&#39;, p.]]></description>
</item>
<item>
    <title>Use `sync.Pool` to reduce memory consumption</title>
    <link>https://blog.unknowntpo.me/syncpool/</link>
    <pubDate>Mon, 13 Feb 2023 18:50:03 &#43;0800</pubDate>
    <author>unknowntpo</author>
    <guid>https://blog.unknowntpo.me/syncpool/</guid>
    <description><![CDATA[Identifying the problem Our service is like a excel document datastore. and we use xorm as ORM framework, Everytime we need to get data from DB, we call session.Find(&amp;[]Author{}) with the slice of table beans, but this have a problem,
Memory allocation is very high So every time lots of clients try to download excel file, the memory consumption is too high, and downloadling excel file takes too long to complete.]]></description>
</item>
<item>
    <title>Optimize a PARTITION - SELECT query up to 60x faster</title>
    <link>https://blog.unknowntpo.me/idx-only-scan/</link>
    <pubDate>Sun, 12 Feb 2023 14:23:03 &#43;0800</pubDate>
    <author>unknowntpo</author>
    <guid>https://blog.unknowntpo.me/idx-only-scan/</guid>
    <description><![CDATA[This post demonstrates my experience of optimizing a PARTITION - SELECT query, and how I made it up to 60x faster.
Original Query and the use case Our App is a simple excel data version control system, the data is organized by project, key and data is stored in seperated table called dbKey and dbData .
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 create table dbKey ( id serial , project_id int, -- keys goes here -- NOTE: key can be 1.]]></description>
</item>
<item>
    <title>ChatGPT First Glance</title>
    <link>https://blog.unknowntpo.me/chatgpt-first-glance/</link>
    <pubDate>Sat, 21 Jan 2023 12:00:58 &#43;0800</pubDate>
    <author>unknowntpo</author>
    <guid>https://blog.unknowntpo.me/chatgpt-first-glance/</guid>
    <description><![CDATA[This is my first glance of ChatGPT, and I ask her to generate a peice of code in Haskell, which can map a function to a list.
The result she generated is totally correct, and can be run in playground.
1 2 3 4 5 6 7 8 9 10 11 12 addOneToEach :: [Int] -&gt; [Int] addOneToEach xs = map (+1) xs myMap :: (a -&gt; b) -&gt; [a] -&gt; [b] myMap _ [] = [] myMap f (x:xs) = f x : myMap f xs main = do let myList = [1, 2, 3, 4] let doubledList = myMap (*2) myList print doubledList -- Output: [2,4,6,8] Here&rsquo;s the link to our chat: https://sharegpt.]]></description>
</item>
<item>
    <title>My First Post</title>
    <link>https://blog.unknowntpo.me/my-first-post/</link>
    <pubDate>Sun, 08 Jan 2023 19:38:19 &#43;0800</pubDate>
    <author>unknowntpo</author>
    <guid>https://blog.unknowntpo.me/my-first-post/</guid>
    <description><![CDATA[Hello, This is my first time trying Hugo! Inline Formula: 1 SELECT &#39;hello-world&#39; FROM me Block Formula:
Test IFrame ]]></description>
</item>
<item>
    <title>About me</title>
    <link>https://blog.unknowntpo.me/about/</link>
    <pubDate>Sun, 08 Jan 2023 15:38:19 &#43;0800</pubDate>
    <author>unknowntpo</author>
    <guid>https://blog.unknowntpo.me/about/</guid>
    <description><![CDATA[I am unknowntpo, a Backend Software Engineer. ]]></description>
</item>
</channel>
</rss>
